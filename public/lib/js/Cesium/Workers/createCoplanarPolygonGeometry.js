define(["./arrayRemoveDuplicates-9877adc7","./BoundingRectangle-9ce149e2","./Transforms-38070b06","./Matrix2-e0921750","./RuntimeError-8952249c","./ComponentDatatype-0f8fc942","./CoplanarPolygonGeometryLibrary-c7bc341b","./defaultValue-81eec7ed","./GeometryAttribute-0fe2ec20","./GeometryAttributes-32b29525","./GeometryInstance-4161c0b6","./GeometryPipeline-8ec6816a","./IndexDatatype-2261ba8d","./PolygonGeometryLibrary-84bd401d","./PolygonPipeline-4229a1ef","./VertexFormat-7df34ea5","./_commonjsHelpers-3aae1032-26891ab7","./combine-3c023bda","./WebGLConstants-508b9636","./OrientedBoundingBox-0325d230","./EllipsoidTangentPlane-19768649","./AxisAlignedBoundingBox-982e50b2","./IntersectionTests-12725781","./Plane-e7da25b6","./AttributeCompression-a65cf082","./EncodedCartesian3-4e052475","./ArcType-fc72c06c","./EllipsoidRhumbLine-ac050b55"],(function(e,t,n,o,a,r,i,s,l,c,y,p,d,u,m,g,C,b,h,f,x,P,A,L,w,G,F,v){"use strict";const k=new o.Cartesian3,E=new t.BoundingRectangle,_=new o.Cartesian2,T=new o.Cartesian2,D=new o.Cartesian3,V=new o.Cartesian3,H=new o.Cartesian3,R=new o.Cartesian3,I=new o.Cartesian3,M=new o.Cartesian3,B=new n.Quaternion,O=new o.Matrix3,z=new o.Matrix3,S=new o.Cartesian3;function N(e,t,a,i,y,p,u,g,C){const b=e.positions;let h=m.PolygonPipeline.triangulate(e.positions2D,e.holes);h.length<3&&(h=[0,1,2]);const f=d.IndexDatatype.createTypedArray(b.length,h.length);f.set(h);let x=O;if(0!==i){let e=n.Quaternion.fromAxisAngle(u,i,B);if(x=o.Matrix3.fromQuaternion(e,x),t.tangent||t.bitangent){e=n.Quaternion.fromAxisAngle(u,-i,B);const a=o.Matrix3.fromQuaternion(e,z);g=o.Cartesian3.normalize(o.Matrix3.multiplyByVector(a,g,g),g),t.bitangent&&(C=o.Cartesian3.normalize(o.Cartesian3.cross(u,g,C),C))}}else x=o.Matrix3.clone(o.Matrix3.IDENTITY,x);const P=T;t.st&&(P.x=a.x,P.y=a.y);const A=b.length,L=3*A,w=new Float64Array(L),G=t.normal?new Float32Array(L):void 0,F=t.tangent?new Float32Array(L):void 0,v=t.bitangent?new Float32Array(L):void 0,E=t.st?new Float32Array(2*A):void 0;let D=0,V=0,H=0,R=0,I=0;for(let e=0;e<A;e++){const n=b[e];if(w[D++]=n.x,w[D++]=n.y,w[D++]=n.z,t.st)if(s.defined(y)&&y.positions.length===A)E[I++]=y.positions[e].x,E[I++]=y.positions[e].y;else{const e=p(o.Matrix3.multiplyByVector(x,n,k),_);o.Cartesian2.subtract(e,P,e);const t=r.CesiumMath.clamp(e.x/a.width,0,1),i=r.CesiumMath.clamp(e.y/a.height,0,1);E[I++]=t,E[I++]=i}t.normal&&(G[V++]=u.x,G[V++]=u.y,G[V++]=u.z),t.tangent&&(F[R++]=g.x,F[R++]=g.y,F[R++]=g.z),t.bitangent&&(v[H++]=C.x,v[H++]=C.y,v[H++]=C.z)}const M=new c.GeometryAttributes;return t.position&&(M.position=new l.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:w})),t.normal&&(M.normal=new l.GeometryAttribute({componentDatatype:r.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:G})),t.tangent&&(M.tangent=new l.GeometryAttribute({componentDatatype:r.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:F})),t.bitangent&&(M.bitangent=new l.GeometryAttribute({componentDatatype:r.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:v})),t.st&&(M.st=new l.GeometryAttribute({componentDatatype:r.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:E})),new l.Geometry({attributes:M,indices:f,primitiveType:l.PrimitiveType.TRIANGLES})}function j(e){const t=(e=s.defaultValue(e,s.defaultValue.EMPTY_OBJECT)).polygonHierarchy,n=e.textureCoordinates;a.Check.defined("options.polygonHierarchy",t);const r=s.defaultValue(e.vertexFormat,g.VertexFormat.DEFAULT);this._vertexFormat=g.VertexFormat.clone(r),this._polygonHierarchy=t,this._stRotation=s.defaultValue(e.stRotation,0),this._ellipsoid=o.Ellipsoid.clone(s.defaultValue(e.ellipsoid,o.Ellipsoid.WGS84)),this._workerName="createCoplanarPolygonGeometry",this._textureCoordinates=n,this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(t,o.Cartesian3)+g.VertexFormat.packedLength+o.Ellipsoid.packedLength+(s.defined(n)?u.PolygonGeometryLibrary.computeHierarchyPackedLength(n,o.Cartesian2):1)+2}j.fromPositions=function(e){e=s.defaultValue(e,s.defaultValue.EMPTY_OBJECT),a.Check.defined("options.positions",e.positions);return new j({polygonHierarchy:{positions:e.positions},vertexFormat:e.vertexFormat,stRotation:e.stRotation,ellipsoid:e.ellipsoid,textureCoordinates:e.textureCoordinates})},j.pack=function(e,t,n){return a.Check.typeOf.object("value",e),a.Check.defined("array",t),n=s.defaultValue(n,0),n=u.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,n,o.Cartesian3),o.Ellipsoid.pack(e._ellipsoid,t,n),n+=o.Ellipsoid.packedLength,g.VertexFormat.pack(e._vertexFormat,t,n),n+=g.VertexFormat.packedLength,t[n++]=e._stRotation,s.defined(e._textureCoordinates)?n=u.PolygonGeometryLibrary.packPolygonHierarchy(e._textureCoordinates,t,n,o.Cartesian2):t[n++]=-1,t[n++]=e.packedLength,t};const Q=o.Ellipsoid.clone(o.Ellipsoid.UNIT_SPHERE),U=new g.VertexFormat,Y={polygonHierarchy:{}};return j.unpack=function(e,t,n){a.Check.defined("array",e),t=s.defaultValue(t,0);const r=u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t,o.Cartesian3);t=r.startingIndex,delete r.startingIndex;const i=o.Ellipsoid.unpack(e,t,Q);t+=o.Ellipsoid.packedLength;const l=g.VertexFormat.unpack(e,t,U);t+=g.VertexFormat.packedLength;const c=e[t++],y=-1===e[t]?void 0:u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t,o.Cartesian2);s.defined(y)?(t=y.startingIndex,delete y.startingIndex):t++;const p=e[t++];return s.defined(n)||(n=new j(Y)),n._polygonHierarchy=r,n._ellipsoid=o.Ellipsoid.clone(i,n._ellipsoid),n._vertexFormat=g.VertexFormat.clone(l,n._vertexFormat),n._stRotation=c,n._textureCoordinates=y,n.packedLength=p,n},j.createGeometry=function(t){const a=t._vertexFormat,c=t._polygonHierarchy,m=t._stRotation,g=t._textureCoordinates,C=s.defined(g);let b=c.positions;if(b=e.arrayRemoveDuplicates(b,o.Cartesian3.equalsEpsilon,!0),b.length<3)return;let h=D,f=V,x=H,P=I;const A=M;if(!i.CoplanarPolygonGeometryLibrary.computeProjectTo2DArguments(b,R,P,A))return;if(h=o.Cartesian3.cross(P,A,h),h=o.Cartesian3.normalize(h,h),!o.Cartesian3.equalsEpsilon(R,o.Cartesian3.ZERO,r.CesiumMath.EPSILON6)){const e=t._ellipsoid.geodeticSurfaceNormal(R,S);o.Cartesian3.dot(h,e)<0&&(h=o.Cartesian3.negate(h,h),P=o.Cartesian3.negate(P,P))}const L=i.CoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction(R,P,A),w=i.CoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction(R,P,A);a.tangent&&(f=o.Cartesian3.clone(P,f)),a.bitangent&&(x=o.Cartesian3.clone(A,x));const G=u.PolygonGeometryLibrary.polygonsFromHierarchy(c,C,L,!1),F=G.hierarchy,v=G.polygons,k=C?u.PolygonGeometryLibrary.polygonsFromHierarchy(g,!0,(function(e){return e}),!1).polygons:void 0;if(0===F.length)return;b=F[0].outerRing;const _=n.BoundingSphere.fromPoints(b),T=u.PolygonGeometryLibrary.computeBoundingRectangle(h,w,b,m,E),B=[];for(let e=0;e<v.length;e++){const t=new y.GeometryInstance({geometry:N(v[e],a,T,m,C?k[e]:void 0,w,h,f,x)});B.push(t)}const O=p.GeometryPipeline.combineInstances(B)[0];O.attributes.position.values=new Float64Array(O.attributes.position.values),O.indices=d.IndexDatatype.createTypedArray(O.attributes.position.values.length/3,O.indices);const z=O.attributes;return a.position||delete z.position,new l.Geometry({attributes:z,indices:O.indices,primitiveType:O.primitiveType,boundingSphere:_})},function(e,t){return s.defined(t)&&(e=j.unpack(e,t)),j.createGeometry(e)}}));
//# sourceMappingURL=createCoplanarPolygonGeometry.js.map
