define(["./arrayRemoveDuplicates-9877adc7","./Transforms-38070b06","./Matrix2-e0921750","./RuntimeError-8952249c","./ComponentDatatype-0f8fc942","./CoplanarPolygonGeometryLibrary-c7bc341b","./defaultValue-81eec7ed","./GeometryAttribute-0fe2ec20","./GeometryAttributes-32b29525","./GeometryInstance-4161c0b6","./GeometryPipeline-8ec6816a","./IndexDatatype-2261ba8d","./PolygonGeometryLibrary-84bd401d","./_commonjsHelpers-3aae1032-26891ab7","./combine-3c023bda","./WebGLConstants-508b9636","./OrientedBoundingBox-0325d230","./EllipsoidTangentPlane-19768649","./AxisAlignedBoundingBox-982e50b2","./IntersectionTests-12725781","./Plane-e7da25b6","./AttributeCompression-a65cf082","./EncodedCartesian3-4e052475","./ArcType-fc72c06c","./EllipsoidRhumbLine-ac050b55","./PolygonPipeline-4229a1ef"],(function(e,t,n,o,r,i,a,c,s,y,l,p,u,d,m,f,g,b,h,P,G,C,k,L,H,T){"use strict";function E(e){const t=e.length,n=new Float64Array(3*t),o=p.IndexDatatype.createTypedArray(t,2*t);let i=0,a=0;for(let r=0;r<t;r++){const c=e[r];n[i++]=c.x,n[i++]=c.y,n[i++]=c.z,o[a++]=r,o[a++]=(r+1)%t}const y=new s.GeometryAttributes({position:new c.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})});return new c.Geometry({attributes:y,indices:o,primitiveType:c.PrimitiveType.LINES})}function A(e){const t=(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).polygonHierarchy;o.Check.defined("options.polygonHierarchy",t),this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(t,n.Cartesian3)+1}A.fromPositions=function(e){e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT),o.Check.defined("options.positions",e.positions);return new A({polygonHierarchy:{positions:e.positions}})},A.pack=function(e,t,r){return o.Check.typeOf.object("value",e),o.Check.defined("array",t),r=a.defaultValue(r,0),t[r=u.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r,n.Cartesian3)]=e.packedLength,t};const _={polygonHierarchy:{}};return A.unpack=function(e,t,r){o.Check.defined("array",e),t=a.defaultValue(t,0);const i=u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t,n.Cartesian3);t=i.startingIndex,delete i.startingIndex;const c=e[t];return a.defined(r)||(r=new A(_)),r._polygonHierarchy=i,r.packedLength=c,r},A.createGeometry=function(o){const r=o._polygonHierarchy;let a=r.positions;if(a=e.arrayRemoveDuplicates(a,n.Cartesian3.equalsEpsilon,!0),a.length<3)return;if(!i.CoplanarPolygonGeometryLibrary.validOutline(a))return;const s=u.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(r,!1);if(0===s.length)return;const p=[];for(let e=0;e<s.length;e++){const t=new y.GeometryInstance({geometry:E(s[e])});p.push(t)}const d=l.GeometryPipeline.combineInstances(p)[0],m=t.BoundingSphere.fromPoints(r.positions);return new c.Geometry({attributes:d.attributes,indices:d.indices,primitiveType:d.primitiveType,boundingSphere:m})},function(e,t){return a.defined(t)&&(e=A.unpack(e,t)),e._ellipsoid=n.Ellipsoid.clone(e._ellipsoid),A.createGeometry(e)}}));
//# sourceMappingURL=createCoplanarPolygonOutlineGeometry.js.map
