{"version":3,"file":"CoplanarPolygonGeometryLibrary-c7bc341b.js","sources":["../../../../Source/Core/CoplanarPolygonGeometryLibrary.js"],"sourcesContent":["import Cartesian2 from \"./Cartesian2.js\";\nimport Cartesian3 from \"./Cartesian3.js\";\nimport Check from \"./Check.js\";\nimport Matrix3 from \"./Matrix3.js\";\nimport OrientedBoundingBox from \"./OrientedBoundingBox.js\";\n\n/**\n * @private\n */\nconst CoplanarPolygonGeometryLibrary = {};\n\nconst scratchIntersectionPoint = new Cartesian3();\nconst scratchXAxis = new Cartesian3();\nconst scratchYAxis = new Cartesian3();\nconst scratchZAxis = new Cartesian3();\nconst obbScratch = new OrientedBoundingBox();\n\nCoplanarPolygonGeometryLibrary.validOutline = function (positions) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"positions\", positions);\n  //>>includeEnd('debug');\n\n  const orientedBoundingBox = OrientedBoundingBox.fromPoints(\n    positions,\n    obbScratch\n  );\n  const halfAxes = orientedBoundingBox.halfAxes;\n  const xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\n  const yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\n  const zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\n\n  const xMag = Cartesian3.magnitude(xAxis);\n  const yMag = Cartesian3.magnitude(yAxis);\n  const zMag = Cartesian3.magnitude(zAxis);\n\n  // If all the points are on a line return undefined because we can't draw a polygon\n  return !(\n    (xMag === 0 && (yMag === 0 || zMag === 0)) ||\n    (yMag === 0 && zMag === 0)\n  );\n};\n\n// call after removeDuplicates\nCoplanarPolygonGeometryLibrary.computeProjectTo2DArguments = function (\n  positions,\n  centerResult,\n  planeAxis1Result,\n  planeAxis2Result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"positions\", positions);\n  Check.defined(\"centerResult\", centerResult);\n  Check.defined(\"planeAxis1Result\", planeAxis1Result);\n  Check.defined(\"planeAxis2Result\", planeAxis2Result);\n  //>>includeEnd('debug');\n\n  const orientedBoundingBox = OrientedBoundingBox.fromPoints(\n    positions,\n    obbScratch\n  );\n  const halfAxes = orientedBoundingBox.halfAxes;\n  const xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\n  const yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\n  const zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\n\n  const xMag = Cartesian3.magnitude(xAxis);\n  const yMag = Cartesian3.magnitude(yAxis);\n  const zMag = Cartesian3.magnitude(zAxis);\n  const min = Math.min(xMag, yMag, zMag);\n\n  // If all the points are on a line return undefined because we can't draw a polygon\n  if (\n    (xMag === 0 && (yMag === 0 || zMag === 0)) ||\n    (yMag === 0 && zMag === 0)\n  ) {\n    return false;\n  }\n\n  let planeAxis1;\n  let planeAxis2;\n\n  if (min === yMag || min === zMag) {\n    planeAxis1 = xAxis;\n  }\n  if (min === xMag) {\n    planeAxis1 = yAxis;\n  } else if (min === zMag) {\n    planeAxis2 = yAxis;\n  }\n  if (min === xMag || min === yMag) {\n    planeAxis2 = zAxis;\n  }\n\n  Cartesian3.normalize(planeAxis1, planeAxis1Result);\n  Cartesian3.normalize(planeAxis2, planeAxis2Result);\n  Cartesian3.clone(orientedBoundingBox.center, centerResult);\n  return true;\n};\n\nfunction projectTo2D(position, center, axis1, axis2, result) {\n  const v = Cartesian3.subtract(position, center, scratchIntersectionPoint);\n  const x = Cartesian3.dot(axis1, v);\n  const y = Cartesian3.dot(axis2, v);\n\n  return Cartesian2.fromElements(x, y, result);\n}\n\nCoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction = function (\n  center,\n  axis1,\n  axis2\n) {\n  return function (positions) {\n    const positionResults = new Array(positions.length);\n    for (let i = 0; i < positions.length; i++) {\n      positionResults[i] = projectTo2D(positions[i], center, axis1, axis2);\n    }\n\n    return positionResults;\n  };\n};\n\nCoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction = function (\n  center,\n  axis1,\n  axis2\n) {\n  return function (position, result) {\n    return projectTo2D(position, center, axis1, axis2, result);\n  };\n};\nexport default CoplanarPolygonGeometryLibrary;\n"],"names":["CoplanarPolygonGeometryLibrary","scratchIntersectionPoint","Cartesian3","scratchXAxis","scratchYAxis","scratchZAxis","obbScratch","OrientedBoundingBox","projectTo2D","position","center","axis1","axis2","result","v","subtract","x","dot","y","Cartesian2","fromElements","validOutline","positions","Check","defined","halfAxes","fromPoints","xAxis","Matrix3","getColumn","yAxis","zAxis","xMag","magnitude","yMag","zMag","computeProjectTo2DArguments","centerResult","planeAxis1Result","planeAxis2Result","orientedBoundingBox","min","Math","planeAxis1","planeAxis2","normalize","clone","createProjectPointsTo2DFunction","positionResults","Array","length","i","createProjectPointTo2DFunction"],"mappings":"mIASM,MAAAA,EAAiC,GAEjCC,EAA2B,IAAIC,EAAAA,WAC/BC,EAAe,IAAID,EAAAA,WACnBE,EAAe,IAAIF,EAAAA,WACnBG,EAAe,IAAIH,EAAAA,WACnBI,EAAa,IAAIC,EAAAA,oBAoFvB,SAASC,EAAYC,EAAUC,EAAQC,EAAOC,EAAOC,GACnD,MAAMC,EAAIZ,EAAAA,WAAWa,SAASN,EAAUC,EAAQT,GAC1Ce,EAAId,EAAUA,WAACe,IAAIN,EAAOG,GAC1BI,EAAIhB,EAAUA,WAACe,IAAIL,EAAOE,GAEhC,OAAOK,EAAUA,WAACC,aAAaJ,EAAGE,EAAGL,GAvFvCb,EAA+BqB,aAAe,SAAUC,GAEtDC,EAAAA,MAAMC,QAAQ,YAAaF,GAG3B,MAIMG,EAJsBlB,EAAAA,oBAAoBmB,WAC9CJ,EACAhB,GAEmCmB,SAC/BE,EAAQC,EAAAA,QAAQC,UAAUJ,EAAU,EAAGtB,GACvC2B,EAAQF,EAAAA,QAAQC,UAAUJ,EAAU,EAAGrB,GACvC2B,EAAQH,EAAAA,QAAQC,UAAUJ,EAAU,EAAGpB,GAEvC2B,EAAO9B,EAAAA,WAAW+B,UAAUN,GAC5BO,EAAOhC,EAAAA,WAAW+B,UAAUH,GAC5BK,EAAOjC,EAAAA,WAAW+B,UAAUF,GAGlC,QACY,IAATC,IAAwB,IAATE,GAAuB,IAATC,IACpB,IAATD,GAAuB,IAATC,IAKnBnC,EAA+BoC,4BAA8B,SAC3Dd,EACAe,EACAC,EACAC,GAGAhB,EAAAA,MAAMC,QAAQ,YAAaF,GAC3BC,EAAAA,MAAMC,QAAQ,eAAgBa,GAC9Bd,EAAAA,MAAMC,QAAQ,mBAAoBc,GAClCf,EAAAA,MAAMC,QAAQ,mBAAoBe,GAGlC,MAAMC,EAAsBjC,EAAAA,oBAAoBmB,WAC9CJ,EACAhB,GAEImB,EAAWe,EAAoBf,SAC/BE,EAAQC,EAAAA,QAAQC,UAAUJ,EAAU,EAAGtB,GACvC2B,EAAQF,EAAAA,QAAQC,UAAUJ,EAAU,EAAGrB,GACvC2B,EAAQH,EAAAA,QAAQC,UAAUJ,EAAU,EAAGpB,GAEvC2B,EAAO9B,EAAAA,WAAW+B,UAAUN,GAC5BO,EAAOhC,EAAAA,WAAW+B,UAAUH,GAC5BK,EAAOjC,EAAAA,WAAW+B,UAAUF,GAC5BU,EAAMC,KAAKD,IAAIT,EAAME,EAAMC,GAGjC,GACY,IAATH,IAAwB,IAATE,GAAuB,IAATC,IACpB,IAATD,GAAuB,IAATC,EAEf,OAAO,EAGT,IAAIQ,EACAC,EAiBJ,OAfIH,IAAQP,GAAQO,IAAQN,IAC1BQ,EAAahB,GAEXc,IAAQT,EACVW,EAAab,EACJW,IAAQN,IACjBS,EAAad,GAEXW,IAAQT,GAAQS,IAAQP,IAC1BU,EAAab,GAGf7B,EAAAA,WAAW2C,UAAUF,EAAYL,GACjCpC,EAAAA,WAAW2C,UAAUD,EAAYL,GACjCrC,EAAAA,WAAW4C,MAAMN,EAAoB9B,OAAQ2B,IACtC,GAWTrC,EAA+B+C,gCAAkC,SAC/DrC,EACAC,EACAC,GAEA,OAAO,SAAUU,GACf,MAAM0B,EAAkB,IAAIC,MAAM3B,EAAU4B,QAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAI7B,EAAU4B,OAAQC,IACpCH,EAAgBG,GAAK3C,EAAYc,EAAU6B,GAAIzC,EAAQC,EAAOC,GAGhE,OAAOoC,IAIXhD,EAA+BoD,+BAAiC,SAC9D1C,EACAC,EACAC,GAEA,OAAO,SAAUH,EAAUI,GACzB,OAAOL,EAAYC,EAAUC,EAAQC,EAAOC,EAAOC"}